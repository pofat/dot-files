#/usr/bin/env bash
#x cmdhub: Test terminal emulator's color capability

source ~/Git/dot-files/shell/jack_log

printf '\n\n\n\n\n\n\n\n'
jackNote '\n===> 3-BIT COLOR IN BACKGROUND \n'
cat <<END
1; -> bold
5; -> blink
7; -> reverse
END

CELL_TEXT='Mudox'   # The test text
#CELL_TEXT='gYw'   # The test text
CELL_WIDTH=${#CELL_TEXT}
HEAD_WIDTH=7

FGs=(30m 31m 32m 33m 34m 35m 36m 37m)
BGs=(40m 41m 42m 43m 44m 45m 46m 47m)


printf "\n%${HEAD_WIDTH}s" ' '
for bg in "${BGs[*]}"; do
  printf "  %${CELL_WIDTH}s " $bg
done
echo

color_line() {
  local fg=$1
  printf "\n%${HEAD_WIDTH}s" $fg
  for bg in "${BGs[@]}"; do
    printf " \x1b[${fg}\x1b[${bg} %${CELL_WIDTH}s \x1b[0m" "${CELL_TEXT}"
  done
}

for fg in "${FGs[@]}"; do
  color_line ${fg}
  fg_bold="1;${fg}"
  color_line ${fg_bold}
  fg_bold_blink="5;${fg_bold}"
  color_line ${fg_bold_blink}
  fg_bold_inverse="7;${fg_bold}"
  color_line ${fg_bold_inverse}
  echo
done
echo

jackNote '\n\n\n\n===> 256 COLOR IN BACKGROUND \n'
echo 'code: \e[48;5;[0-255]m'

for i in {0..255} ; do
  if (( i % 8 == 0 )); then
    printf "\n";
  fi

  if ((
    i == 0 || i == 18 || i == 19 || i == 124
    || ( 52 <= i && i <= 55 )
    || ( 88 <= i && i <= 95 )
    || ( 232 <= i && i <= 243 )
    ))
  then
    printf "\e[37m\e[48;5;%sm %3s \e[0m " "$i" "$i"
  else
    printf "\e[30m\e[48;5;%sm %3s \e[0m " "$i" "$i"
  fi
done

jackNote '\n\n\n\n===> 256 COLOR IN FOREGROUND \n'
echo 'code: \e[38;5;[0-255]m'

for i in {0..255} ; do
  if (( i % 8 == 0 )); then
    printf "\n";
  fi

  if ((
    i == 0 || i == 18 || i == 19 || i == 124
    || ( 52 <= i && i <= 55 )
    || ( 88 <= i && i <= 95 )
    || ( 232 <= i && i <= 243 )
    ))
  then
    printf "\e[37m\e[38;5;%sm %3s \e[0m " "$i" "$i"
  else
    printf "\e[30m\e[38;5;%sm %3s \e[0m " "$i" "$i"
  fi
done

jackNote '\n\n\n\n===> TRUE COLOR\n'
echo 'code: \e[48;2;[r];[g];[b]m'

for i in {0..255} ; do
  if (( i % 16 == 0 )); then
    printf '\n';
  fi

  r=$i
  g=$(( (i + 127 + 255) % 255 ))
  b=$(( 255 - i ))

  printf '\e[48;2;%s;%s;%sm   \e[0m' $r $g $b
done

# vim: ft=sh
