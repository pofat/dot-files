#!/usr/bin/env bash

source ~/Git/dot-files/bash/lib/jack

# executable availability check
if [[ -z "$(type hugo)" ]]; then
  printf "\e[31mmissing executable hugo..., quit\e[0m\n"
  return
fi

# hb(): build hugo site into mudox.github.io {{{1
hb() {

  # Source path
  local src_path="${HOME}/Sites/home"
  if [ ! -d "${src_path}" ]; then
    jackError "missing ${src_path} as source repo, quit ..."
    return
  fi

  # Build path
  local build_path="${src_path}/build/publish"
  cd "${src_path}"

  # Destination path
  local dest_path="${HOME}/Sites/mudox.github.io"
  if [ ! -d "${dest_path}" ]; then
    jackError "missing ${dest_path} as destination repo, quit ..."
    return
  fi

  # Build site
  jackNote "\nStart building site ..."
  rm -rf "${build_path}" &>/dev/null # remove public directory first.

  hugo                                 \
    --source=${src_path}               \
    --destination="${build_path}"      \
    --buildDrafts

  # Check hugo buiding result
  if (( $? != 0 )); then
    jackError "build site failed, quit"
    return
  fi

  # Install into desitination path
  jackNote "\nInstalling production ..."
  rm -rf "${dest_path}"/* &>/dev/null # Clear the directory up first
  cp -rT "${build_path}" "${dest_path}"

  if (( $? != 0 )); then
    jackError "copying failed, quit"
    return
  fi

  # Depoly to github
  jackNote "\nSyncing <${dest_path##*/}>"
  cd "${dest_path}"
  git add --all . &>/dev/null
  git commit -m "${*:-Cumulative update}"
  git push

  # Sync hugo source repo
  jackNote "\nSyncing <${src_path##*/}>"
  cd "${src_path}"
  git add --all . &>/dev/null
  git commit -m "${*:-Cumulative update}"
  git push

  jackInfo "\nCongrats, open site: <http://mudox.github.io> in 1s ..."
  sleep 1
  open -a 'Google Chrome' 'http://mudox.github.io'

} # }}}1

# hs(): hugo server for test {{{1
hs() {


  # kill running hugo if any.
  kill %hugo &>/dev/null

  # sleep a while for old hugo instance to die completely if any.
  if (( $? == 0 )); then
    sleep .5s
    sleepc 1.5 .1 'waiting for old hugo instance to die out ...'
  fi

  # choose theme
  if (( $# < 1 )); then
    local theme=${1:-"cur_theme"}
  else
    echo "usage: $0 [theme_name]"
    return
  fi

  local src_path="${HOME}/Sites/mudox.github.io-source"

  if [[ ! -d ${src_path} ]]; then
    printf "\e[31mmissing ${src_path} as source repo, quit ...\e[0m\n"
    return
  fi

  # start hugo server
  hugo server                         \
    --source="${src_path}"	      \
    --watch                           \
    --buildDrafts                     \
    --buildFuture                     \
    --theme="${theme}"                \
    --destination="output/local"      \
    >/tmp/hugo.log &

  sleepc 3 .1 'waiting for server to start ...'

  cat /tmp/hugo.log

  # parsing port number
  local url="$(egrep -o 'http://localhost:[0-9]+' /tmp/hugo.log)"

  case $(uname -s) in
    Darwin )
      open "${url}"
      ;;
    CYGWIN* )
      firefox='/d/Program Files/Mozilla Firefox/firefox.exe'
      if [ -e "${firefox}" ]; then
	"${firefox}" "${url}" &
      else
	printf "\e[31mmissing firefox, quit ...\e[0m\n"
	return
      fi
      ;;
    Linux )
      firefox "${url}" &>/dev/null &
      ;;
    * )
      printf "\e[31m[.zshrc]: un-recognized platform.\n"
      ;;
  esac
} # }}}1

# vim: filetype=sh foldmethod=marker
