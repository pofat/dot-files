# vim: filetype=zsh

# currently Neovim need these setting to work
export NVIM_TUI_ENABLE_TRUE_COLOR=1
export NVIM_TUI_ENABLE_CURSOR_SHAPE=1

__fzfcmd() {
  [ ${FZF_TMUX:-1} -eq 1 ] && echo "fzf-tmux -d${FZF_TMUX_HEIGHT:-40%}" \
    || echo "fzf"
}

# a smart (n)vim launching wrapper
# usage: v [(partial) mode name] [paramters to (n)vim ...]
# if the given mode name is enough to fix down a certain mode, then (n)vim is
# started in this mode otherwise it will show a fzf menu to let you choose a
# mode.

#v() {
  ## collect modes
  #local modes_dir="${MDX_REPOS_ROOT}/vim-config/chameleon/modes"
  #local modes="$(ls -1 "${modes_dir}" | grep -v '^x_')"
  #modes+="\nupdate-all" # special virtual mode only for plugin updating

  ## pick out mode
  #local mode="$(echo $modes | fzf -i -e -f $1)"

  #if [[ -z $mode ]]; then
    #mode=$(echo "$modes" | $(__fzfcmd) -i -e)
  #elif (( $(echo $mode | wc -l) > 1 )); then
    #mode=$(echo "$modes" | $(__fzfcmd) -i -e -q "$1")
  #fi

  #[[ -z "$mode" ]] && return

  ## launch nvim
  #shift 2>/dev/null
  #MDX_CHAMELEON_MODE="$mode" nvim $@
#}

_v_choose_mode() {

  # collect modes
  local modes_dir="${MDX_REPOS_ROOT}/vim-config/chameleon/modes"
  local modes="$(ls -1 "${modes_dir}" | grep -v '^x_')"
  modes+="\nupdate-all" # special virtual mode only for plugin updating

  # pick out mode
  local mode="$(echo $modes | fzf -i -e -f $1)"

  if [[ -z $mode ]]; then
    mode=$(echo "$modes" | $(__fzfcmd) -i -e)
  elif (( $(echo $mode | wc -l) > 1 )); then
    mode=$(echo "$modes" | $(__fzfcmd) -i -e -q "$1")
  fi

  [[ -z "$mode" ]] && return
  echo "$mode"
}

v() {
  mode="$(_v_choose_mode $1)"

  # launch nvim
  shift 2>/dev/null
  MDX_CHAMELEON_MODE="$mode" nvim $@
}

V() {
  mode="$(_v_choose_mode $1)"

  # launch nvim
  shift 2>/dev/null
  MDX_CHAMELEON_MODE="$mode" vim $@
}

# choose & write chameleon mode to cur_mode file.
vmode() {
  local modes_path="${MDX_REPOS_ROOT}/vim-config/chameleon/modes"
  local cur_mode_file="${modes_path}/../cur_mode"

  local selection
  selection=$(                              \
    ls -1 "${modes_path}" | grep -v '^x_' | \
    $(__fzfcmd)                             \
    --extended-exact                        \
    --select-1                              \
    --prompt='change (neo)vim mode: '       \
    )

  if [[ -n "${selection}" ]]; then
    echo "${selection}" > "${cur_mode_file}"
  fi

  printf "\e[33mset new mode to [$(cat ${cur_mode_file})]\e[0m\n"
}

alias vv="MDX_CHAMELEON_MODE=vim nvim $@"
