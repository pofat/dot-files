#!/bin/bash

# fzf built-in settings. {{{1

# Setup fzf function
# ------------------
unalias fzf 2> /dev/null
fzf() {
  /usr/bin/ruby "${MDX_REPOS_ROOT}/fzf/fzf" "$@"
}
export -f fzf > /dev/null

# Auto-completion
# ---------------
[[ $- =~ i ]] && source "${MDX_REPOS_ROOT}/fzf/fzf-completion.zsh"

# Key bindings
# ------------
# CTRL-T - Paste the selected file path(s) into the command line
__fsel() {
  set -o nonomatch
  command find ./* -path '*/\.*' -prune \
    -o -type f -print \
    -o -type d -print \
    -o -type l -print 2> /dev/null | fzf -m -e | while read item; do
  printf '%q ' "$item"
done
echo
}

if [[ $- =~ i ]]; then
  if [ -n "$TMUX_PANE" -a "${FZF_TMUX:-1}" -ne 0 -a "${LINES:-40}" -gt 15 ]; then
    fzf-file-widget() {
      local height
      height=${FZF_TMUX_HEIGHT:-40%}
      if [[ $height =~ %$ ]]; then
	height="-p ${height%\%}"
      else
	height="-l $height"
      fi
      tmux split-window "${height}" "zsh -c 'source ~/.fzf.zsh; tmux send-keys -t ${TMUX_PANE} \"\$(__fsel)\"'"
    }
  else
    fzf-file-widget() {
      LBUFFER="${LBUFFER}$(__fsel)"
      zle redisplay
    }
  fi
  zle     -N   fzf-file-widget
  bindkey '^T' fzf-file-widget

  # ALT-C - cd into the selected directory
  fzf-cd-widget() {
    cd "${$(set -o nonomatch; command find -L "./*" -path '*/\.*' -prune \
      -o -type d -print 2> /dev/null | fzf -e +m):-.}"
    zle reset-prompt
  }
  zle     -N    fzf-cd-widget
  bindkey '\ec' fzf-cd-widget

  # CTRL-R - Paste the selected command from history into the command line
  fzf-history-widget() {
    LBUFFER=$(fc -l 1 | fzf +s +m -e -n2..,.. | sed "s/ *[0-9*]* *//")
    zle redisplay
  }
  zle     -N   fzf-history-widget
  bindkey '^R' fzf-history-widget

fi


# }}}1

# fe [pattern] - open the selected file with the gvim in tab. {{{1
fe() {
  local file
  file=$(fzf \
    --query="$1" \
    --select-1 \
    --exit-0 \
    --extended-exact \
    --prompt="open in gvim tab: ")

  [ -n "$file" ] && gvim --remote-tab-silent "$file"
} #}}}1

# fh - repeat history {{{1
fh() {
  local cmd_strintg
  if [[ -n "$ZSH_NAME" ]]; then
    cmd_string="$( fc -l | fzf +s -e +m | awk '{print $2}' )"
  else
    cmd_string="$( history | fzf +s -e +m | awk '{print $2}' )"
  fi
  echo "${cmd_strintg}"
} #}}}1

# fkill - select & kill procces {{{1
fkill() {
  ps | \
    sed '1d' | \
    fzf --multi --extended-exact | \
    awk '{print $2}' | \
    xargs kill -"${1:-9}"
} #}}}1

# j - select and cd to paths in $(z -l) {{{1
j() {
  if [[ -z "$(whence z)" ]]; then
    echo "\e[31mneed z, quit...\e[0m"
  fi

  local target_dir
  target_dir=$( z -l | awk '{print $2}' | fzf +m \
    --select-1 \
    --exit-0 \
    --extended-exact)

  [ -n "$target_dir" ] && cd "$target_dir"

  zle reset-prompt
} #}}}1

zle -N j
bindkey '^[j' j

# J - cd to one of directory under current path. {{{1
# do not descend into hidden directories.
J() {
  local dir
  dir=$(find "${1:-*}" -path '*/\.*' -prune \
    -o -type d -print 2> /dev/null | \
    fzf +m +s --extended-exact) &&
    cd "$dir"
} #}}}1

# vim: filetype=zsh foldmethod=marker
